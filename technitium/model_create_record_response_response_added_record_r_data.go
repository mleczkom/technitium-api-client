/*
Technitium API

Go SDK for interacting with Technitium APIs (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 12.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package technitium

import (
	"encoding/json"
)

// checks if the CreateRecordResponseResponseAddedRecordRData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRecordResponseResponseAddedRecordRData{}

// CreateRecordResponseResponseAddedRecordRData struct for CreateRecordResponseResponseAddedRecordRData
type CreateRecordResponseResponseAddedRecordRData struct {
	IpAddress *string `json:"ipAddress,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateRecordResponseResponseAddedRecordRData CreateRecordResponseResponseAddedRecordRData

// NewCreateRecordResponseResponseAddedRecordRData instantiates a new CreateRecordResponseResponseAddedRecordRData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRecordResponseResponseAddedRecordRData() *CreateRecordResponseResponseAddedRecordRData {
	this := CreateRecordResponseResponseAddedRecordRData{}
	return &this
}

// NewCreateRecordResponseResponseAddedRecordRDataWithDefaults instantiates a new CreateRecordResponseResponseAddedRecordRData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRecordResponseResponseAddedRecordRDataWithDefaults() *CreateRecordResponseResponseAddedRecordRData {
	this := CreateRecordResponseResponseAddedRecordRData{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *CreateRecordResponseResponseAddedRecordRData) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecordResponseResponseAddedRecordRData) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *CreateRecordResponseResponseAddedRecordRData) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *CreateRecordResponseResponseAddedRecordRData) SetIpAddress(v string) {
	o.IpAddress = &v
}

func (o CreateRecordResponseResponseAddedRecordRData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRecordResponseResponseAddedRecordRData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateRecordResponseResponseAddedRecordRData) UnmarshalJSON(data []byte) (err error) {
	varCreateRecordResponseResponseAddedRecordRData := _CreateRecordResponseResponseAddedRecordRData{}

	err = json.Unmarshal(data, &varCreateRecordResponseResponseAddedRecordRData)

	if err != nil {
		return err
	}

	*o = CreateRecordResponseResponseAddedRecordRData(varCreateRecordResponseResponseAddedRecordRData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ipAddress")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateRecordResponseResponseAddedRecordRData struct {
	value *CreateRecordResponseResponseAddedRecordRData
	isSet bool
}

func (v NullableCreateRecordResponseResponseAddedRecordRData) Get() *CreateRecordResponseResponseAddedRecordRData {
	return v.value
}

func (v *NullableCreateRecordResponseResponseAddedRecordRData) Set(val *CreateRecordResponseResponseAddedRecordRData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRecordResponseResponseAddedRecordRData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRecordResponseResponseAddedRecordRData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRecordResponseResponseAddedRecordRData(val *CreateRecordResponseResponseAddedRecordRData) *NullableCreateRecordResponseResponseAddedRecordRData {
	return &NullableCreateRecordResponseResponseAddedRecordRData{value: val, isSet: true}
}

func (v NullableCreateRecordResponseResponseAddedRecordRData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRecordResponseResponseAddedRecordRData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


