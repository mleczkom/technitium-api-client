/*
Technitium API

Go SDK for interacting with Technitium APIs (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 12.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package technitium

import (
	"encoding/json"
)

// checks if the GetZoneOptionsResponseResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetZoneOptionsResponseResponse{}

// GetZoneOptionsResponseResponse struct for GetZoneOptionsResponseResponse
type GetZoneOptionsResponseResponse struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Internal *bool `json:"internal,omitempty"`
	DnssecStatus *string `json:"dnssecStatus,omitempty"`
	NotifyFailed *bool `json:"notifyFailed,omitempty"`
	NotifyFailedFor []string `json:"notifyFailedFor,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	ZoneTransfer *string `json:"zoneTransfer,omitempty"`
	ZoneTransferNameServers []string `json:"zoneTransferNameServers,omitempty"`
	ZoneTransferTsigKeyNames []string `json:"zoneTransferTsigKeyNames,omitempty"`
	Notify *string `json:"notify,omitempty"`
	NotifyNameServers []string `json:"notifyNameServers,omitempty"`
	Update *string `json:"update,omitempty"`
	UpdateIpAddresses []string `json:"updateIpAddresses,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetZoneOptionsResponseResponse GetZoneOptionsResponseResponse

// NewGetZoneOptionsResponseResponse instantiates a new GetZoneOptionsResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetZoneOptionsResponseResponse() *GetZoneOptionsResponseResponse {
	this := GetZoneOptionsResponseResponse{}
	return &this
}

// NewGetZoneOptionsResponseResponseWithDefaults instantiates a new GetZoneOptionsResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetZoneOptionsResponseResponseWithDefaults() *GetZoneOptionsResponseResponse {
	this := GetZoneOptionsResponseResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetZoneOptionsResponseResponse) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetZoneOptionsResponseResponse) SetType(v string) {
	o.Type = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetInternal() bool {
	if o == nil || IsNil(o.Internal) {
		var ret bool
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasInternal() bool {
	if o != nil && !IsNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given bool and assigns it to the Internal field.
func (o *GetZoneOptionsResponseResponse) SetInternal(v bool) {
	o.Internal = &v
}

// GetDnssecStatus returns the DnssecStatus field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetDnssecStatus() string {
	if o == nil || IsNil(o.DnssecStatus) {
		var ret string
		return ret
	}
	return *o.DnssecStatus
}

// GetDnssecStatusOk returns a tuple with the DnssecStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetDnssecStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DnssecStatus) {
		return nil, false
	}
	return o.DnssecStatus, true
}

// HasDnssecStatus returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasDnssecStatus() bool {
	if o != nil && !IsNil(o.DnssecStatus) {
		return true
	}

	return false
}

// SetDnssecStatus gets a reference to the given string and assigns it to the DnssecStatus field.
func (o *GetZoneOptionsResponseResponse) SetDnssecStatus(v string) {
	o.DnssecStatus = &v
}

// GetNotifyFailed returns the NotifyFailed field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetNotifyFailed() bool {
	if o == nil || IsNil(o.NotifyFailed) {
		var ret bool
		return ret
	}
	return *o.NotifyFailed
}

// GetNotifyFailedOk returns a tuple with the NotifyFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetNotifyFailedOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyFailed) {
		return nil, false
	}
	return o.NotifyFailed, true
}

// HasNotifyFailed returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasNotifyFailed() bool {
	if o != nil && !IsNil(o.NotifyFailed) {
		return true
	}

	return false
}

// SetNotifyFailed gets a reference to the given bool and assigns it to the NotifyFailed field.
func (o *GetZoneOptionsResponseResponse) SetNotifyFailed(v bool) {
	o.NotifyFailed = &v
}

// GetNotifyFailedFor returns the NotifyFailedFor field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetNotifyFailedFor() []string {
	if o == nil || IsNil(o.NotifyFailedFor) {
		var ret []string
		return ret
	}
	return o.NotifyFailedFor
}

// GetNotifyFailedForOk returns a tuple with the NotifyFailedFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetNotifyFailedForOk() ([]string, bool) {
	if o == nil || IsNil(o.NotifyFailedFor) {
		return nil, false
	}
	return o.NotifyFailedFor, true
}

// HasNotifyFailedFor returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasNotifyFailedFor() bool {
	if o != nil && !IsNil(o.NotifyFailedFor) {
		return true
	}

	return false
}

// SetNotifyFailedFor gets a reference to the given []string and assigns it to the NotifyFailedFor field.
func (o *GetZoneOptionsResponseResponse) SetNotifyFailedFor(v []string) {
	o.NotifyFailedFor = v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *GetZoneOptionsResponseResponse) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetZoneTransfer returns the ZoneTransfer field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetZoneTransfer() string {
	if o == nil || IsNil(o.ZoneTransfer) {
		var ret string
		return ret
	}
	return *o.ZoneTransfer
}

// GetZoneTransferOk returns a tuple with the ZoneTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetZoneTransferOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneTransfer) {
		return nil, false
	}
	return o.ZoneTransfer, true
}

// HasZoneTransfer returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasZoneTransfer() bool {
	if o != nil && !IsNil(o.ZoneTransfer) {
		return true
	}

	return false
}

// SetZoneTransfer gets a reference to the given string and assigns it to the ZoneTransfer field.
func (o *GetZoneOptionsResponseResponse) SetZoneTransfer(v string) {
	o.ZoneTransfer = &v
}

// GetZoneTransferNameServers returns the ZoneTransferNameServers field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetZoneTransferNameServers() []string {
	if o == nil || IsNil(o.ZoneTransferNameServers) {
		var ret []string
		return ret
	}
	return o.ZoneTransferNameServers
}

// GetZoneTransferNameServersOk returns a tuple with the ZoneTransferNameServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetZoneTransferNameServersOk() ([]string, bool) {
	if o == nil || IsNil(o.ZoneTransferNameServers) {
		return nil, false
	}
	return o.ZoneTransferNameServers, true
}

// HasZoneTransferNameServers returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasZoneTransferNameServers() bool {
	if o != nil && !IsNil(o.ZoneTransferNameServers) {
		return true
	}

	return false
}

// SetZoneTransferNameServers gets a reference to the given []string and assigns it to the ZoneTransferNameServers field.
func (o *GetZoneOptionsResponseResponse) SetZoneTransferNameServers(v []string) {
	o.ZoneTransferNameServers = v
}

// GetZoneTransferTsigKeyNames returns the ZoneTransferTsigKeyNames field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetZoneTransferTsigKeyNames() []string {
	if o == nil || IsNil(o.ZoneTransferTsigKeyNames) {
		var ret []string
		return ret
	}
	return o.ZoneTransferTsigKeyNames
}

// GetZoneTransferTsigKeyNamesOk returns a tuple with the ZoneTransferTsigKeyNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetZoneTransferTsigKeyNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ZoneTransferTsigKeyNames) {
		return nil, false
	}
	return o.ZoneTransferTsigKeyNames, true
}

// HasZoneTransferTsigKeyNames returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasZoneTransferTsigKeyNames() bool {
	if o != nil && !IsNil(o.ZoneTransferTsigKeyNames) {
		return true
	}

	return false
}

// SetZoneTransferTsigKeyNames gets a reference to the given []string and assigns it to the ZoneTransferTsigKeyNames field.
func (o *GetZoneOptionsResponseResponse) SetZoneTransferTsigKeyNames(v []string) {
	o.ZoneTransferTsigKeyNames = v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetNotify() string {
	if o == nil || IsNil(o.Notify) {
		var ret string
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetNotifyOk() (*string, bool) {
	if o == nil || IsNil(o.Notify) {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasNotify() bool {
	if o != nil && !IsNil(o.Notify) {
		return true
	}

	return false
}

// SetNotify gets a reference to the given string and assigns it to the Notify field.
func (o *GetZoneOptionsResponseResponse) SetNotify(v string) {
	o.Notify = &v
}

// GetNotifyNameServers returns the NotifyNameServers field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetNotifyNameServers() []string {
	if o == nil || IsNil(o.NotifyNameServers) {
		var ret []string
		return ret
	}
	return o.NotifyNameServers
}

// GetNotifyNameServersOk returns a tuple with the NotifyNameServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetNotifyNameServersOk() ([]string, bool) {
	if o == nil || IsNil(o.NotifyNameServers) {
		return nil, false
	}
	return o.NotifyNameServers, true
}

// HasNotifyNameServers returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasNotifyNameServers() bool {
	if o != nil && !IsNil(o.NotifyNameServers) {
		return true
	}

	return false
}

// SetNotifyNameServers gets a reference to the given []string and assigns it to the NotifyNameServers field.
func (o *GetZoneOptionsResponseResponse) SetNotifyNameServers(v []string) {
	o.NotifyNameServers = v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetUpdate() string {
	if o == nil || IsNil(o.Update) {
		var ret string
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given string and assigns it to the Update field.
func (o *GetZoneOptionsResponseResponse) SetUpdate(v string) {
	o.Update = &v
}

// GetUpdateIpAddresses returns the UpdateIpAddresses field value if set, zero value otherwise.
func (o *GetZoneOptionsResponseResponse) GetUpdateIpAddresses() []string {
	if o == nil || IsNil(o.UpdateIpAddresses) {
		var ret []string
		return ret
	}
	return o.UpdateIpAddresses
}

// GetUpdateIpAddressesOk returns a tuple with the UpdateIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetZoneOptionsResponseResponse) GetUpdateIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.UpdateIpAddresses) {
		return nil, false
	}
	return o.UpdateIpAddresses, true
}

// HasUpdateIpAddresses returns a boolean if a field has been set.
func (o *GetZoneOptionsResponseResponse) HasUpdateIpAddresses() bool {
	if o != nil && !IsNil(o.UpdateIpAddresses) {
		return true
	}

	return false
}

// SetUpdateIpAddresses gets a reference to the given []string and assigns it to the UpdateIpAddresses field.
func (o *GetZoneOptionsResponseResponse) SetUpdateIpAddresses(v []string) {
	o.UpdateIpAddresses = v
}

func (o GetZoneOptionsResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetZoneOptionsResponseResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	if !IsNil(o.DnssecStatus) {
		toSerialize["dnssecStatus"] = o.DnssecStatus
	}
	if !IsNil(o.NotifyFailed) {
		toSerialize["notifyFailed"] = o.NotifyFailed
	}
	if !IsNil(o.NotifyFailedFor) {
		toSerialize["notifyFailedFor"] = o.NotifyFailedFor
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.ZoneTransfer) {
		toSerialize["zoneTransfer"] = o.ZoneTransfer
	}
	if !IsNil(o.ZoneTransferNameServers) {
		toSerialize["zoneTransferNameServers"] = o.ZoneTransferNameServers
	}
	if !IsNil(o.ZoneTransferTsigKeyNames) {
		toSerialize["zoneTransferTsigKeyNames"] = o.ZoneTransferTsigKeyNames
	}
	if !IsNil(o.Notify) {
		toSerialize["notify"] = o.Notify
	}
	if !IsNil(o.NotifyNameServers) {
		toSerialize["notifyNameServers"] = o.NotifyNameServers
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.UpdateIpAddresses) {
		toSerialize["updateIpAddresses"] = o.UpdateIpAddresses
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetZoneOptionsResponseResponse) UnmarshalJSON(data []byte) (err error) {
	varGetZoneOptionsResponseResponse := _GetZoneOptionsResponseResponse{}

	err = json.Unmarshal(data, &varGetZoneOptionsResponseResponse)

	if err != nil {
		return err
	}

	*o = GetZoneOptionsResponseResponse(varGetZoneOptionsResponseResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		delete(additionalProperties, "internal")
		delete(additionalProperties, "dnssecStatus")
		delete(additionalProperties, "notifyFailed")
		delete(additionalProperties, "notifyFailedFor")
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "zoneTransfer")
		delete(additionalProperties, "zoneTransferNameServers")
		delete(additionalProperties, "zoneTransferTsigKeyNames")
		delete(additionalProperties, "notify")
		delete(additionalProperties, "notifyNameServers")
		delete(additionalProperties, "update")
		delete(additionalProperties, "updateIpAddresses")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetZoneOptionsResponseResponse struct {
	value *GetZoneOptionsResponseResponse
	isSet bool
}

func (v NullableGetZoneOptionsResponseResponse) Get() *GetZoneOptionsResponseResponse {
	return v.value
}

func (v *NullableGetZoneOptionsResponseResponse) Set(val *GetZoneOptionsResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetZoneOptionsResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetZoneOptionsResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetZoneOptionsResponseResponse(val *GetZoneOptionsResponseResponse) *NullableGetZoneOptionsResponseResponse {
	return &NullableGetZoneOptionsResponseResponse{value: val, isSet: true}
}

func (v NullableGetZoneOptionsResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetZoneOptionsResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


