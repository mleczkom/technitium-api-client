/*
Technitium API

Go SDK for interacting with Technitium APIs (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 12.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package technitium

import (
	"encoding/json"
)

// checks if the ListZonesResponseResponseZonesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListZonesResponseResponseZonesInner{}

// ListZonesResponseResponseZonesInner struct for ListZonesResponseResponseZonesInner
type ListZonesResponseResponseZonesInner struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Internal *bool `json:"internal,omitempty"`
	DnssecStatus *string `json:"dnssecStatus,omitempty"`
	SoaSerial *int32 `json:"soaSerial,omitempty"`
	Expiry *string `json:"expiry,omitempty"`
	IsExpired *bool `json:"isExpired,omitempty"`
	SyncFailed *bool `json:"syncFailed,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListZonesResponseResponseZonesInner ListZonesResponseResponseZonesInner

// NewListZonesResponseResponseZonesInner instantiates a new ListZonesResponseResponseZonesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListZonesResponseResponseZonesInner() *ListZonesResponseResponseZonesInner {
	this := ListZonesResponseResponseZonesInner{}
	return &this
}

// NewListZonesResponseResponseZonesInnerWithDefaults instantiates a new ListZonesResponseResponseZonesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListZonesResponseResponseZonesInnerWithDefaults() *ListZonesResponseResponseZonesInner {
	this := ListZonesResponseResponseZonesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListZonesResponseResponseZonesInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListZonesResponseResponseZonesInner) SetType(v string) {
	o.Type = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetInternal() bool {
	if o == nil || IsNil(o.Internal) {
		var ret bool
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasInternal() bool {
	if o != nil && !IsNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given bool and assigns it to the Internal field.
func (o *ListZonesResponseResponseZonesInner) SetInternal(v bool) {
	o.Internal = &v
}

// GetDnssecStatus returns the DnssecStatus field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetDnssecStatus() string {
	if o == nil || IsNil(o.DnssecStatus) {
		var ret string
		return ret
	}
	return *o.DnssecStatus
}

// GetDnssecStatusOk returns a tuple with the DnssecStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetDnssecStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DnssecStatus) {
		return nil, false
	}
	return o.DnssecStatus, true
}

// HasDnssecStatus returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasDnssecStatus() bool {
	if o != nil && !IsNil(o.DnssecStatus) {
		return true
	}

	return false
}

// SetDnssecStatus gets a reference to the given string and assigns it to the DnssecStatus field.
func (o *ListZonesResponseResponseZonesInner) SetDnssecStatus(v string) {
	o.DnssecStatus = &v
}

// GetSoaSerial returns the SoaSerial field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetSoaSerial() int32 {
	if o == nil || IsNil(o.SoaSerial) {
		var ret int32
		return ret
	}
	return *o.SoaSerial
}

// GetSoaSerialOk returns a tuple with the SoaSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetSoaSerialOk() (*int32, bool) {
	if o == nil || IsNil(o.SoaSerial) {
		return nil, false
	}
	return o.SoaSerial, true
}

// HasSoaSerial returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasSoaSerial() bool {
	if o != nil && !IsNil(o.SoaSerial) {
		return true
	}

	return false
}

// SetSoaSerial gets a reference to the given int32 and assigns it to the SoaSerial field.
func (o *ListZonesResponseResponseZonesInner) SetSoaSerial(v int32) {
	o.SoaSerial = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetExpiry() string {
	if o == nil || IsNil(o.Expiry) {
		var ret string
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.Expiry) {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasExpiry() bool {
	if o != nil && !IsNil(o.Expiry) {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given string and assigns it to the Expiry field.
func (o *ListZonesResponseResponseZonesInner) SetExpiry(v string) {
	o.Expiry = &v
}

// GetIsExpired returns the IsExpired field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetIsExpired() bool {
	if o == nil || IsNil(o.IsExpired) {
		var ret bool
		return ret
	}
	return *o.IsExpired
}

// GetIsExpiredOk returns a tuple with the IsExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetIsExpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExpired) {
		return nil, false
	}
	return o.IsExpired, true
}

// HasIsExpired returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasIsExpired() bool {
	if o != nil && !IsNil(o.IsExpired) {
		return true
	}

	return false
}

// SetIsExpired gets a reference to the given bool and assigns it to the IsExpired field.
func (o *ListZonesResponseResponseZonesInner) SetIsExpired(v bool) {
	o.IsExpired = &v
}

// GetSyncFailed returns the SyncFailed field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetSyncFailed() bool {
	if o == nil || IsNil(o.SyncFailed) {
		var ret bool
		return ret
	}
	return *o.SyncFailed
}

// GetSyncFailedOk returns a tuple with the SyncFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetSyncFailedOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncFailed) {
		return nil, false
	}
	return o.SyncFailed, true
}

// HasSyncFailed returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasSyncFailed() bool {
	if o != nil && !IsNil(o.SyncFailed) {
		return true
	}

	return false
}

// SetSyncFailed gets a reference to the given bool and assigns it to the SyncFailed field.
func (o *ListZonesResponseResponseZonesInner) SetSyncFailed(v bool) {
	o.SyncFailed = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *ListZonesResponseResponseZonesInner) SetLastModified(v string) {
	o.LastModified = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *ListZonesResponseResponseZonesInner) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListZonesResponseResponseZonesInner) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *ListZonesResponseResponseZonesInner) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *ListZonesResponseResponseZonesInner) SetDisabled(v bool) {
	o.Disabled = &v
}

func (o ListZonesResponseResponseZonesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListZonesResponseResponseZonesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	if !IsNil(o.DnssecStatus) {
		toSerialize["dnssecStatus"] = o.DnssecStatus
	}
	if !IsNil(o.SoaSerial) {
		toSerialize["soaSerial"] = o.SoaSerial
	}
	if !IsNil(o.Expiry) {
		toSerialize["expiry"] = o.Expiry
	}
	if !IsNil(o.IsExpired) {
		toSerialize["isExpired"] = o.IsExpired
	}
	if !IsNil(o.SyncFailed) {
		toSerialize["syncFailed"] = o.SyncFailed
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListZonesResponseResponseZonesInner) UnmarshalJSON(data []byte) (err error) {
	varListZonesResponseResponseZonesInner := _ListZonesResponseResponseZonesInner{}

	err = json.Unmarshal(data, &varListZonesResponseResponseZonesInner)

	if err != nil {
		return err
	}

	*o = ListZonesResponseResponseZonesInner(varListZonesResponseResponseZonesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		delete(additionalProperties, "internal")
		delete(additionalProperties, "dnssecStatus")
		delete(additionalProperties, "soaSerial")
		delete(additionalProperties, "expiry")
		delete(additionalProperties, "isExpired")
		delete(additionalProperties, "syncFailed")
		delete(additionalProperties, "lastModified")
		delete(additionalProperties, "disabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListZonesResponseResponseZonesInner struct {
	value *ListZonesResponseResponseZonesInner
	isSet bool
}

func (v NullableListZonesResponseResponseZonesInner) Get() *ListZonesResponseResponseZonesInner {
	return v.value
}

func (v *NullableListZonesResponseResponseZonesInner) Set(val *ListZonesResponseResponseZonesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListZonesResponseResponseZonesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListZonesResponseResponseZonesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListZonesResponseResponseZonesInner(val *ListZonesResponseResponseZonesInner) *NullableListZonesResponseResponseZonesInner {
	return &NullableListZonesResponseResponseZonesInner{value: val, isSet: true}
}

func (v NullableListZonesResponseResponseZonesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListZonesResponseResponseZonesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


